SHARP	#	0	0	0	0	0
T_INCLUDE	include	0	0	0	0	0
O_LT	<	1	0	-1	0	0
V_IFILE	stdio.h	0	0	0	0	0
O_GT	>	0	0	0	0	0
T_TYPEDEF	typedef	0	1	0	1	0
T_STRUCT	struct	1	0	1	0	0
V_ID	holdClay	1	0	1	0	0
LCURLYB	{	0	0	-1	-1	0
T_INT	int	4	1	0	1	1
V_ID	length	1	0	1	0	1
SEMICOLON	;	0	0	0	0	1
T_INT	int	4	1	1	1	1
V_ID	width	1	0	1	0	1
SEMICOLON	;	0	0	0	0	1
T_INT	int	4	1	1	1	1
V_ID	height	1	0	1	0	1
SEMICOLON	;	0	0	0	0	1
T_CHAR	char	4	1	1	1	1
V_ID	name	1	0	1	0	1
LSQUAREB	[	0	0	0	0	1
V_INTEGER	8	0	0	0	0	1
RSQUAREB	]	0	0	0	0	1
SEMICOLON	;	0	0	0	0	1
RCURLYB	}	0	1	1	1	0
V_TYPE	hold	0	0	1	-1	0
SEMICOLON	;	0	0	0	0	0
T_INT	int	0	1	1	1	0
V_ID	main	1	0	1	0	0
LPARENT	(	0	0	0	0	0
RPARENT	)	0	0	0	0	0
LCURLYB	{	0	0	-1	-1	0
T_INT	int	4	1	0	1	1
V_ID	classnum	1	0	1	0	1
COMMA	,	0	0	0	0	1
V_ID	n	1	0	1	0	1
COMMA	,	0	0	0	0	1
V_ID	i	1	0	1	0	1
COMMA	,	0	0	0	0	1
V_ID	j	1	0	1	0	1
SEMICOLON	;	0	0	0	0	1
T_INT	int	4	1	1	1	1
V_ID	sum	1	0	1	0	1
ASSIGN	=	1	0	1	0	1
V_INTEGER	0	1	0	1	0	1
COMMA	,	1	0	0	0	1
V_ID	ave	1	0	1	0	1
SEMICOLON	;	0	0	0	0	1
T_INT	int	4	1	1	1	1
V_ID	gi	1	0	1	0	1
COMMA	,	0	0	0	0	1
V_ID	gj	1	0	1	0	1
COMMA	,	0	0	0	0	1
V_ID	vi	1	0	1	0	1
COMMA	,	0	0	0	0	1
V_ID	vj	1	0	1	0	1
SEMICOLON	;	0	0	0	0	1
V_TYPE	hold	4	1	1	1	1
V_ID	a	1	0	1	0	1
LSQUAREB	[	0	0	0	0	1
V_INTEGER	1000	0	0	0	0	1
RSQUAREB	]	0	0	0	0	1
LSQUAREB	[	0	0	0	0	1
V_INTEGER	20	0	0	0	0	1
RSQUAREB	]	0	0	0	0	1
SEMICOLON	;	0	0	0	0	1
V_ID	scanf	4	1	1	1	1
LPARENT	(	0	0	0	0	1
V_STRING	"%d"	0	0	0	0	1
COMMA	,	0	0	0	0	1
O_BAND	&	1	0	1	0	1
V_ID	n	0	0	0	0	1
RPARENT	)	0	0	0	0	1
SEMICOLON	;	0	0	0	0	1
T_FOR	for	4	1	1	1	1
LPARENT	(	0	0	1	0	1
V_ID	i	0	0	0	0	1
ASSIGN	=	1	0	1	0	1
V_INTEGER	0	1	0	1	0	1
SEMICOLON	;	0	0	0	0	1
V_ID	n	1	0	1	-1	1
O_NE	!=	1	0	1	0	1
O_SUB	-	1	0	1	0	1
V_INTEGER	1	0	0	0	0	1
SEMICOLON	;	0	0	0	0	1
V_ID	i	1	0	1	-1	1
O_SADD	++	0	0	0	0	1
RPARENT	)	0	0	0	0	1
LCURLYB	{	0	0	-1	-1	1
T_FOR	for	8	1	0	1	2
LPARENT	(	0	0	1	0	2
V_ID	j	0	0	0	0	2
ASSIGN	=	1	0	1	0	2
V_INTEGER	0	1	0	1	0	2
SEMICOLON	;	0	0	0	0	2
V_ID	j	1	0	1	-1	2
O_LT	<	1	0	1	0	2
V_ID	n	1	0	1	0	2
SEMICOLON	;	0	0	0	0	2
V_ID	j	1	0	1	-1	2
O_SADD	++	0	0	0	0	2
RPARENT	)	0	0	0	0	2
LCURLYB	{	0	0	-1	-1	2
V_ID	scanf	12	1	0	1	3
LPARENT	(	0	0	0	0	3
V_STRING	"%d %d %d %s"	0	0	0	0	3
COMMA	,	0	0	0	0	3
O_BAND	&	1	0	1	0	3
V_ID	a	0	0	0	0	3
LSQUAREB	[	0	0	0	0	3
V_ID	i	0	0	0	0	3
RSQUAREB	]	0	0	0	0	3
LSQUAREB	[	0	0	0	0	3
V_ID	j	0	0	0	0	3
RSQUAREB	]	0	0	0	0	3
PERIOD	.	0	0	0	0	3
V_ID	length	0	0	0	0	3
COMMA	,	0	0	0	0	3
O_BAND	&	1	0	1	0	3
V_ID	a	0	0	0	0	3
LSQUAREB	[	0	0	0	0	3
V_ID	i	0	0	0	0	3
RSQUAREB	]	0	0	0	0	3
LSQUAREB	[	0	0	0	0	3
V_ID	j	0	0	0	0	3
RSQUAREB	]	0	0	0	0	3
PERIOD	.	0	0	0	0	3
V_ID	width	0	0	0	0	3
COMMA	,	0	0	0	0	3
O_BAND	&	1	0	1	0	3
V_ID	a	0	0	0	0	3
LSQUAREB	[	0	0	0	0	3
V_ID	i	0	0	0	0	3
RSQUAREB	]	0	0	0	0	3
LSQUAREB	[	0	0	0	0	3
V_ID	j	0	0	0	0	3
RSQUAREB	]	0	0	0	0	3
PERIOD	.	0	0	0	0	3
V_ID	height	0	0	0	0	3
COMMA	,	0	0	0	0	3
O_BAND	&	1	0	1	0	3
V_ID	a	0	0	0	0	3
LSQUAREB	[	0	0	0	0	3
V_ID	i	0	0	0	0	3
RSQUAREB	]	0	0	0	0	3
LSQUAREB	[	0	0	0	0	3
V_ID	j	0	0	0	0	3
RSQUAREB	]	0	0	0	0	3
PERIOD	.	0	0	0	0	3
V_ID	name	0	0	0	0	3
RPARENT	)	0	0	0	0	3
SEMICOLON	;	0	0	0	0	3
V_ID	sum	12	1	1	1	3
A_ADD	+=	1	0	1	0	3
V_ID	a	1	0	1	0	3
LSQUAREB	[	0	0	0	0	3
V_ID	i	0	0	0	0	3
RSQUAREB	]	0	0	0	0	3
LSQUAREB	[	0	0	0	0	3
V_ID	j	0	0	0	0	3
RSQUAREB	]	0	0	0	0	3
PERIOD	.	0	0	0	0	3
V_ID	length	0	0	0	0	3
O_MUL	*	1	0	1	0	3
V_ID	a	1	0	1	0	3
LSQUAREB	[	0	0	0	0	3
V_ID	i	0	0	0	0	3
RSQUAREB	]	0	0	0	0	3
LSQUAREB	[	0	0	0	0	3
V_ID	j	0	0	0	0	3
RSQUAREB	]	0	0	0	0	3
PERIOD	.	0	0	0	0	3
V_ID	width	0	0	0	0	3
O_MUL	*	1	0	1	0	3
V_ID	a	1	0	1	0	3
LSQUAREB	[	0	0	0	0	3
V_ID	i	0	0	0	0	3
RSQUAREB	]	0	0	0	0	3
LSQUAREB	[	0	0	0	0	3
V_ID	j	0	0	0	0	3
RSQUAREB	]	0	0	0	0	3
PERIOD	.	0	0	0	0	3
V_ID	height	0	0	0	0	3
SEMICOLON	;	0	0	0	0	3
RCURLYB	}	8	1	1	1	2
V_ID	ave	8	1	-1	1	2
ASSIGN	=	1	0	1	0	2
V_ID	sum	1	0	1	0	2
O_DIV	/	1	0	1	0	2
V_ID	n	1	0	1	0	2
SEMICOLON	;	0	0	0	0	2
V_ID	classnum	8	1	1	1	2
ASSIGN	=	1	0	1	0	2
V_ID	i	1	0	1	0	2
SEMICOLON	;	0	0	0	0	2
T_FOR	for	12	1	1	1	2
LPARENT	(	0	0	1	0	2
V_ID	j	0	0	0	0	2
ASSIGN	=	1	0	1	0	2
V_INTEGER	0	1	0	1	0	2
SEMICOLON	;	0	0	0	0	2
V_ID	j	1	0	1	-1	2
O_LT	<	1	0	1	0	2
V_ID	n	1	0	1	0	2
SEMICOLON	;	0	0	0	0	2
V_ID	j	1	0	1	-1	2
O_SADD	++	0	0	0	0	2
RPARENT	)	0	0	0	0	2
LCURLYB	{	0	0	-1	-1	2
T_IF	if	16	1	0	1	3
LPARENT	(	0	0	1	0	3
V_ID	a	0	0	0	0	3
LSQUAREB	[	0	0	0	0	3
V_ID	i	0	0	0	0	3
RSQUAREB	]	0	0	0	0	3
LSQUAREB	[	0	0	0	0	3
V_ID	j	0	0	0	0	3
RSQUAREB	]	0	0	0	0	3
PERIOD	.	0	0	0	0	3
V_ID	length	0	0	0	0	3
O_MUL	*	1	0	1	0	3
V_ID	a	1	0	1	0	3
LSQUAREB	[	0	0	0	0	3
V_ID	i	0	0	0	0	3
RSQUAREB	]	0	0	0	0	3
LSQUAREB	[	0	0	0	0	3
V_ID	j	0	0	0	0	3
RSQUAREB	]	0	0	0	0	3
PERIOD	.	0	0	0	0	3
V_ID	width	0	0	0	0	3
O_MUL	*	1	0	1	0	3
V_ID	a	1	0	1	0	3
LSQUAREB	[	0	0	0	0	3
V_ID	i	0	0	0	0	3
RSQUAREB	]	0	0	0	0	3
LSQUAREB	[	0	0	0	0	3
V_ID	j	0	0	0	0	3
RSQUAREB	]	0	0	0	0	3
PERIOD	.	0	0	0	0	3
V_ID	height	0	0	0	0	3
O_GT	>	1	0	1	0	3
V_ID	ave	1	0	1	0	3
RPARENT	)	0	0	0	0	3
LCURLYB	{	0	0	-1	-1	3
V_ID	gi	20	1	0	1	4
ASSIGN	=	1	0	1	0	4
V_ID	i	1	0	1	0	4
SEMICOLON	;	0	0	0	0	4
V_ID	gj	20	1	1	1	4
ASSIGN	=	1	0	1	0	4
V_ID	j	1	0	1	0	4
SEMICOLON	;	0	0	0	0	4
RCURLYB	}	16	1	1	1	3
T_ELSE	else	16	1	-1	-1	3
T_IF	if	1	0	1	-1	4
LPARENT	(	0	0	1	0	4
V_ID	a	0	0	0	0	4
LSQUAREB	[	0	0	0	0	4
V_ID	i	0	0	0	0	4
RSQUAREB	]	0	0	0	0	4
LSQUAREB	[	0	0	0	0	4
V_ID	j	0	0	0	0	4
RSQUAREB	]	0	0	0	0	4
PERIOD	.	0	0	0	0	4
V_ID	length	0	0	0	0	4
O_MUL	*	1	0	1	0	4
V_ID	a	1	0	1	0	4
LSQUAREB	[	0	0	0	0	4
V_ID	i	0	0	0	0	4
RSQUAREB	]	0	0	0	0	4
LSQUAREB	[	0	0	0	0	4
V_ID	j	0	0	0	0	4
RSQUAREB	]	0	0	0	0	4
PERIOD	.	0	0	0	0	4
V_ID	width	0	0	0	0	4
O_MUL	*	1	0	1	0	4
V_ID	a	1	0	1	0	4
LSQUAREB	[	0	0	0	0	4
V_ID	i	0	0	0	0	4
RSQUAREB	]	0	0	0	0	4
LSQUAREB	[	0	0	0	0	4
V_ID	j	0	0	0	0	4
RSQUAREB	]	0	0	0	0	4
PERIOD	.	0	0	0	0	4
V_ID	height	0	0	0	0	4
O_LT	<	1	0	1	0	4
V_ID	ave	1	0	1	0	4
RPARENT	)	0	0	0	0	4
LCURLYB	{	0	0	-1	-1	4
V_ID	vi	20	1	0	1	5
ASSIGN	=	1	0	1	0	5
V_ID	i	1	0	1	0	5
SEMICOLON	;	0	0	0	0	5
V_ID	vj	20	1	1	1	5
ASSIGN	=	1	0	1	0	5
V_ID	j	1	0	1	0	5
SEMICOLON	;	0	0	0	0	5
RCURLYB	}	16	1	1	1	4
RCURLYB	}	12	1	-1	1	2
V_ID	printf	8	1	-1	1	2
LPARENT	(	0	0	0	0	2
V_STRING	"%s took clay from %s.\n"	0	0	0	0	2
COMMA	,	0	0	0	0	2
V_ID	a	1	0	1	0	2
LSQUAREB	[	0	0	0	0	2
V_ID	gi	0	0	0	0	2
RSQUAREB	]	0	0	0	0	2
LSQUAREB	[	0	0	0	0	2
V_ID	gj	0	0	0	0	2
RSQUAREB	]	0	0	0	0	2
PERIOD	.	0	0	0	0	2
V_ID	name	0	0	0	0	2
COMMA	,	0	0	0	0	2
V_ID	a	1	0	1	0	2
LSQUAREB	[	0	0	0	0	2
V_ID	vi	0	0	0	0	2
RSQUAREB	]	0	0	0	0	2
LSQUAREB	[	0	0	0	0	2
V_ID	vj	0	0	0	0	2
RSQUAREB	]	0	0	0	0	2
PERIOD	.	0	0	0	0	2
V_ID	name	0	0	0	0	2
RPARENT	)	0	0	0	0	2
SEMICOLON	;	0	0	0	0	2
V_ID	sum	8	1	1	1	2
ASSIGN	=	1	0	1	0	2
V_INTEGER	0	1	0	1	0	2
SEMICOLON	;	0	0	0	0	2
V_ID	scanf	8	1	1	1	2
LPARENT	(	0	0	0	0	2
V_STRING	"%d"	0	0	0	0	2
COMMA	,	0	0	0	0	2
O_BAND	&	1	0	1	0	2
V_ID	n	0	0	0	0	2
RPARENT	)	0	0	0	0	2
SEMICOLON	;	0	0	0	0	2
RCURLYB	}	4	1	1	1	1
T_RETURN	return	4	1	-1	1	1
V_INTEGER	0	1	0	1	0	1
SEMICOLON	;	0	0	0	0	1
RCURLYB	}	0	1	1	1	0
