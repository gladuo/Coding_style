SHARP	#	0	0	0	0	0
T_INCLUDE	include	0	0	0	0	0
O_LT	<	1	0	-1	0	0
V_IFILE	stdio.h	0	0	0	0	0
O_GT	>	0	0	0	0	0
SHARP	#	0	1	0	1	0
T_INCLUDE	include	0	0	0	0	0
O_LT	<	1	0	-1	0	0
V_IFILE	stdint.h	0	0	0	0	0
O_GT	>	0	0	0	0	0
T_TYPEDEF	typedef	0	1	0	1	0
T_STRUCT	struct	1	0	1	0	0
V_ID	BitData	1	0	1	0	0
LCURLYB	{	1	0	-1	-1	0
T_UNSIGNED	unsigned	4	1	0	1	1
V_ID	B1	1	0	1	0	1
COLON	:	0	0	0	0	1
V_INTEGER	1	0	0	-1	0	1
SEMICOLON	;	0	0	0	0	1
T_UNSIGNED	unsigned	4	1	1	1	1
V_ID	B2	1	0	1	0	1
COLON	:	0	0	0	0	1
V_INTEGER	1	0	0	-1	0	1
SEMICOLON	;	0	0	0	0	1
T_UNSIGNED	unsigned	4	1	1	1	1
V_ID	B3	1	0	1	0	1
COLON	:	0	0	0	0	1
V_INTEGER	1	0	0	-1	0	1
SEMICOLON	;	0	0	0	0	1
T_UNSIGNED	unsigned	4	1	1	1	1
V_ID	B4	1	0	1	0	1
COLON	:	0	0	0	0	1
V_INTEGER	1	0	0	-1	0	1
SEMICOLON	;	0	0	0	0	1
T_UNSIGNED	unsigned	4	1	1	1	1
V_ID	B5	1	0	1	0	1
COLON	:	0	0	0	0	1
V_INTEGER	1	0	0	-1	0	1
SEMICOLON	;	0	0	0	0	1
T_UNSIGNED	unsigned	4	1	1	1	1
V_ID	B6	1	0	1	0	1
COLON	:	0	0	0	0	1
V_INTEGER	1	0	0	-1	0	1
SEMICOLON	;	0	0	0	0	1
T_UNSIGNED	unsigned	4	1	1	1	1
V_ID	B7	1	0	1	0	1
COLON	:	0	0	0	0	1
V_INTEGER	1	0	0	-1	0	1
SEMICOLON	;	0	0	0	0	1
T_UNSIGNED	unsigned	4	1	1	1	1
V_ID	B8	1	0	1	0	1
COLON	:	0	0	0	0	1
V_INTEGER	1	0	0	-1	0	1
SEMICOLON	;	0	0	0	0	1
RCURLYB	}	0	1	1	1	0
V_TYPE	BIT	0	0	1	-1	0
SEMICOLON	;	0	0	0	0	0
T_INT	int	0	1	1	1	0
V_ID	main	1	0	1	0	0
LPARENT	(	0	0	0	0	0
RPARENT	)	0	0	0	0	0
LCURLYB	{	0	0	-1	-1	0
T_CHAR	char	4	1	0	1	1
V_ID	a	1	0	1	0	1
ASSIGN	=	1	0	1	0	1
V_CHAR	'a'	1	0	1	0	1
SEMICOLON	;	0	0	0	0	1
V_TYPE	BIT	4	1	1	1	1
O_MUL	*	1	0	-1	0	1
V_ID	p	1	0	0	0	1
ASSIGN	=	1	0	1	0	1
O_BAND	&	1	0	1	0	1
V_ID	a	0	0	0	0	1
SEMICOLON	;	0	0	0	0	1
T_INT	int	4	1	1	1	1
V_ID	i	1	0	1	0	1
ASSIGN	=	1	0	1	0	1
T_SIZEOF	sizeof	1	0	1	0	1
LPARENT	(	0	0	0	0	1
T_CHAR	char	0	0	0	0	1
RPARENT	)	0	0	0	0	1
O_MUL	*	0	0	1	0	1
V_INTEGER	8	0	0	1	0	1
O_SUB	-	1	0	1	0	1
V_INTEGER	1	1	0	1	0	1
SEMICOLON	;	0	0	0	0	1
T_FOR	for	4	1	1	1	1
LPARENT	(	0	0	1	0	1
SEMICOLON	;	0	0	0	0	1
V_ID	i	1	0	1	-1	1
O_GE	>=	1	0	1	0	1
V_INTEGER	0	1	0	1	0	1
SEMICOLON	;	0	0	0	0	1
V_ID	i	1	0	1	-1	1
O_SSUB	--	0	0	0	0	1
RPARENT	)	0	0	0	0	1
LCURLYB	{	0	0	-1	-1	1
T_IF	if	8	1	0	1	2
LPARENT	(	0	0	1	0	2
LPARENT	(	0	0	0	0	2
V_INTEGER	1	0	0	0	0	2
LSHIFT	<<	1	0	1	0	2
V_ID	i	1	0	1	0	2
RPARENT	)	0	0	0	0	2
O_BAND	&	1	0	1	0	2
V_ID	a	1	0	1	0	2
RPARENT	)	0	0	0	0	2
LCURLYB	{	1	0	-1	-1	2
V_ID	printf	12	1	0	1	3
LPARENT	(	0	0	0	0	3
V_STRING	"1"	0	0	0	0	3
RPARENT	)	0	0	0	0	3
SEMICOLON	;	0	0	0	0	3
RCURLYB	}	8	1	1	1	2
T_ELSE	else	1	0	-1	-1	2
LCURLYB	{	1	0	-1	-1	2
V_ID	printf	12	1	0	1	3
LPARENT	(	0	0	0	0	3
V_STRING	"0"	0	0	0	0	3
RPARENT	)	0	0	0	0	3
SEMICOLON	;	0	0	0	0	3
RCURLYB	}	8	1	1	1	2
T_IF	if	8	1	-1	1	2
LPARENT	(	0	0	1	0	2
V_ID	i	0	0	0	0	2
O_MOD	%	1	0	1	0	2
V_INTEGER	4	1	0	1	0	2
O_EQ	==	1	0	1	0	2
V_INTEGER	0	1	0	1	0	2
RPARENT	)	0	0	0	0	2
LCURLYB	{	1	0	-1	-1	2
V_ID	printf	12	1	0	1	3
LPARENT	(	0	0	0	0	3
V_STRING	" "	0	0	0	0	3
RPARENT	)	0	0	0	0	3
SEMICOLON	;	0	0	0	0	3
RCURLYB	}	8	1	1	1	2
RCURLYB	}	4	1	-1	1	1
V_ID	printf	4	1	-1	1	1
LPARENT	(	0	0	0	0	1
V_STRING	"\n"	0	0	0	0	1
RPARENT	)	0	0	0	0	1
SEMICOLON	;	0	0	0	0	1
V_ID	printf	4	1	1	1	1
LPARENT	(	0	0	0	0	1
V_STRING	"%x"	0	0	0	0	1
COMMA	,	0	0	0	0	1
V_ID	p	0	0	1	0	1
POINTER	->	0	0	0	0	1
V_ID	B1	0	0	0	0	1
RPARENT	)	0	0	0	0	1
SEMICOLON	;	0	0	0	0	1
V_ID	printf	4	1	1	1	1
LPARENT	(	0	0	0	0	1
V_STRING	"%x"	0	0	0	0	1
COMMA	,	0	0	0	0	1
V_ID	p	0	0	1	0	1
POINTER	->	0	0	0	0	1
V_ID	B2	0	0	0	0	1
RPARENT	)	0	0	0	0	1
SEMICOLON	;	0	0	0	0	1
V_ID	printf	4	1	1	1	1
LPARENT	(	0	0	0	0	1
V_STRING	"%x"	0	0	0	0	1
COMMA	,	0	0	0	0	1
V_ID	p	0	0	1	0	1
POINTER	->	0	0	0	0	1
V_ID	B3	0	0	0	0	1
RPARENT	)	0	0	0	0	1
SEMICOLON	;	0	0	0	0	1
V_ID	printf	4	1	1	1	1
LPARENT	(	0	0	0	0	1
V_STRING	"%x"	0	0	0	0	1
COMMA	,	0	0	0	0	1
V_ID	p	0	0	1	0	1
POINTER	->	0	0	0	0	1
V_ID	B4	0	0	0	0	1
RPARENT	)	0	0	0	0	1
SEMICOLON	;	0	0	0	0	1
V_ID	printf	4	1	1	1	1
LPARENT	(	0	0	0	0	1
V_STRING	" "	0	0	0	0	1
RPARENT	)	0	0	0	0	1
SEMICOLON	;	0	0	0	0	1
V_ID	printf	4	1	1	1	1
LPARENT	(	0	0	0	0	1
V_STRING	"%x"	0	0	0	0	1
COMMA	,	0	0	0	0	1
V_ID	p	0	0	1	0	1
POINTER	->	0	0	0	0	1
V_ID	B5	0	0	0	0	1
RPARENT	)	0	0	0	0	1
SEMICOLON	;	0	0	0	0	1
V_ID	printf	4	1	1	1	1
LPARENT	(	0	0	0	0	1
V_STRING	"%x"	0	0	0	0	1
COMMA	,	0	0	0	0	1
V_ID	p	0	0	1	0	1
POINTER	->	0	0	0	0	1
V_ID	B6	0	0	0	0	1
RPARENT	)	0	0	0	0	1
SEMICOLON	;	0	0	0	0	1
V_ID	printf	4	1	1	1	1
LPARENT	(	0	0	0	0	1
V_STRING	"%x"	0	0	0	0	1
COMMA	,	0	0	0	0	1
V_ID	p	0	0	1	0	1
POINTER	->	0	0	0	0	1
V_ID	B7	0	0	0	0	1
RPARENT	)	0	0	0	0	1
SEMICOLON	;	0	0	0	0	1
V_ID	printf	4	1	1	1	1
LPARENT	(	0	0	0	0	1
V_STRING	"%x"	0	0	0	0	1
COMMA	,	0	0	0	0	1
V_ID	p	0	0	1	0	1
POINTER	->	0	0	0	0	1
V_ID	B8	0	0	0	0	1
RPARENT	)	0	0	0	0	1
SEMICOLON	;	0	0	0	0	1
T_RETURN	return	4	1	1	1	1
V_INTEGER	0	1	0	1	0	1
SEMICOLON	;	0	0	0	0	1
RCURLYB	}	0	1	1	1	0
