SHARP	#	0	0	0	0	0
T_INCLUDE	include	0	0	0	0	0
O_LT	<	1	0	-1	0	0
V_IFILE	stdio.h	0	0	0	0	0
O_GT	>	0	0	0	0	0
SHARP	#	0	1	0	1	0
T_INCLUDE	include	0	0	0	0	0
O_LT	<	1	0	-1	0	0
V_IFILE	stdlib.h	0	0	0	0	0
O_GT	>	0	0	0	0	0
T_INT	int	0	1	0	1	0
V_ID	str_len	1	0	1	0	0
LPARENT	(	0	0	0	0	0
T_CHAR	char	0	0	0	0	0
O_MUL	*	1	0	-1	0	0
V_ID	str	0	0	0	0	0
RPARENT	)	0	0	0	0	0
SEMICOLON	;	0	0	0	0	0
T_INT	int	0	1	1	1	0
V_ID	main	1	0	1	0	0
LPARENT	(	0	0	0	0	0
RPARENT	)	0	0	0	0	0
LCURLYB	{	0	0	-1	-1	0
T_CHAR	char	4	1	0	1	1
O_MUL	*	1	0	-1	0	1
V_ID	str	0	0	0	0	1
ASSIGN	=	1	0	1	0	1
LPARENT	(	1	0	1	0	1
T_CHAR	char	0	0	0	0	1
O_MUL	*	1	0	0	0	1
RPARENT	)	0	0	0	0	1
V_ID	malloc	0	0	0	0	1
LPARENT	(	0	0	0	0	1
V_INTEGER	100	0	0	0	0	1
O_MUL	*	0	0	1	0	1
T_SIZEOF	sizeof	0	0	1	0	1
LPARENT	(	0	0	0	0	1
T_CHAR	char	0	0	0	0	1
RPARENT	)	0	0	0	0	1
RPARENT	)	0	0	0	0	1
SEMICOLON	;	0	0	0	0	1
V_ID	scanf	4	1	1	1	1
LPARENT	(	0	0	0	0	1
V_STRING	"%s"	0	0	0	0	1
COMMA	,	0	0	0	0	1
V_ID	str	0	0	1	0	1
RPARENT	)	0	0	0	0	1
SEMICOLON	;	0	0	0	0	1
V_ID	printf	4	1	1	1	1
LPARENT	(	0	0	0	0	1
V_STRING	"%d"	0	0	0	0	1
COMMA	,	0	0	0	0	1
V_ID	str_len	1	0	1	0	1
LPARENT	(	0	0	0	0	1
V_ID	str	0	0	0	0	1
RPARENT	)	0	0	0	0	1
RPARENT	)	0	0	0	0	1
SEMICOLON	;	0	0	0	0	1
V_ID	free	4	1	1	1	1
LPARENT	(	0	0	0	0	1
V_ID	str	0	0	0	0	1
RPARENT	)	0	0	0	0	1
SEMICOLON	;	0	0	0	0	1
T_RETURN	return	4	1	1	1	1
V_INTEGER	0	1	0	1	0	1
SEMICOLON	;	0	0	0	0	1
RCURLYB	}	0	1	1	1	0
T_INT	int	0	1	-1	1	0
V_ID	str_len	1	0	1	0	0
LPARENT	(	0	0	0	0	0
T_CHAR	char	0	0	0	0	0
O_MUL	*	1	0	-1	0	0
V_ID	str	0	0	0	0	0
RPARENT	)	0	0	0	0	0
LCURLYB	{	0	0	-1	-1	0
T_INT	int	4	1	0	1	1
V_ID	i	1	0	1	0	1
ASSIGN	=	1	0	1	0	1
V_INTEGER	0	1	0	1	0	1
SEMICOLON	;	0	0	0	0	1
T_WHILE	while	4	1	1	1	1
LPARENT	(	0	0	1	0	1
O_MUL	*	0	0	0	0	1
LPARENT	(	0	0	0	0	1
V_ID	str	0	0	0	0	1
O_ADD	+	0	0	1	0	1
V_ID	i	0	0	1	0	1
RPARENT	)	0	0	0	0	1
O_NE	!=	1	0	1	0	1
V_CHAR	'\0'	1	0	1	0	1
RPARENT	)	0	0	0	0	1
LCURLYB	{	4	1	-1	-1	1
V_ID	i	8	1	0	1	2
O_SADD	++	0	0	0	0	2
SEMICOLON	;	0	0	0	0	2
RCURLYB	}	4	1	1	1	1
T_RETURN	return	4	1	-1	1	1
V_ID	i	1	0	1	0	1
SEMICOLON	;	0	0	0	0	1
RCURLYB	}	0	1	1	1	0
